apiVersion: apps/v1
kind: Deployment
metadata:
  name: $JOB_NAME
spec:
  replicas: 1
  progressDeadlineSeconds: 400
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1        # how many pods we can add at a time
      maxUnavailable: 0  # maxUnavailable define how many pods can be unavailable # during the rolling update
  selector:
    matchLabels:
      app: $JOB_NAME
  template:
    metadata:
      name: $JOB_NAME
      labels:
        app: $JOB_NAME
        date: "$DATE"
    spec:
      containers:
      - name: $JOB_NAME
        image: asia.gcr.io/cgl-capital/$JOB_NAME:$IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 9090
        envFrom:
          - configMapRef:
              name: $JOB_NAME
          - secretRef:
              name: $JOB_NAME
        resources:
          requests:
            memory: "250Mi"
        livenessProbe:
          initialDelaySeconds: 120
          failureThreshold: 3
          httpGet:
            path: $SERVICE_PATH/health
            port: 9090
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          initialDelaySeconds: 60
          failureThreshold: 3
          httpGet:
            path: $SERVICE_PATH/health
            port: 9090
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=cgl-capital:asia-east2:cgl-capital=tcp:3306"

          # This flag specifies where the service account key can be found
          - "-credential_file=/usr/work_home/secrets/service-account.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # Resource configuration depends on an application's requirements. You
        # should adjust the following values based on what your application
        # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "250Mi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu: "0.5"
        volumeMounts:
          - name: service-account-config
            mountPath: /usr/work_home/secrets
            readOnly: true
      volumes:
        - name: service-account-config
          secret:
            secretName: service-account-credential
      restartPolicy: Always
      imagePullSecrets:
      - name: docker-image-pull-secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: $JOB_NAME
  name: $JOB_NAME
spec:
  ports:
  - name: http
    port: 80
    targetPort: 9090
  selector:
    name: $JOB_NAME
  type: ClusterIP
---
